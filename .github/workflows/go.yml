name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_SERVICE: docker.io
  DOCKER_URL: ${{ secrets.DOCKER_USERNAME }}/sample-golang-server
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
  DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}
  API_TOKEN: ${{ secrets.API_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get commit SHA
        id: get_sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .dockerignore
        run: |
          if [ ! -f ".dockerignore" ]; then
            echo ".git" > .dockerignore
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_URL }}:${{ steps.get_sha.outputs.sha }}

      - name: Notify deployment update
        if: success()
        run: |
          curl -X PUT "https://api.tmp.computesphere.com/api/v1/deployments/${{ env.DEPLOYMENT_ID }}/update-image" \
            -H "Content-Type: application/json" \
            -H "x-user-token: ${{ env.API_TOKEN }}" \
            -d "{\"image\":\"docker.io/${{ env.DOCKER_URL }}\",\"tag\":\"${{ steps.get_sha.outputs.sha }}\"}"
